uniform sampler2D SCREEN_TEXTURE;
uniform highp float boozePower = 1;
const highp float TimeScale = 0.5;
const highp float DistortionScale = 0.01;

uniform highp float BLUR_AMOUNT = 3;
//const highp float xs = 1;
//const highp float ys = 1;
//const highp float r = 1;
//uniform


void fragment() {

    //highp float mod = mix(0.0, DistortionScale, boozePower);
    highp vec3 col = vec3(0.0);
    //if(texture(SCREEN_TEXTURE, UV).x+texture(SCREEN_TEXTURE, UV).y+texture(SCREEN_TEXTURE, UV).z>=1.3){
    //    col = texture(SCREEN_TEXTURE, UV).xyz * BLUR_AMOUNT;
    //}
    highp vec4 color = vec4(0.0);//zTexture(UV);


    col = texture(SCREEN_TEXTURE, UV).xyz ;
    //col += texture(SCREEN_TEXTURE, UV + vec2(SCREEN_PIXEL_SIZE.x, 0.0)).xyz * 0.15;
    //col += texture(SCREEN_TEXTURE, UV + vec2(-SCREEN_PIXEL_SIZE.x, 0.0)).xyz * 0.15;

    float razn = 0;//max(0,texture(SCREEN_TEXTURE, UV).x+texture(SCREEN_TEXTURE, UV).y+texture(SCREEN_TEXTURE, UV).z-0.7);

    for(float i = 1.0; i < 10; i++){
        color = texture(SCREEN_TEXTURE, UV+ vec2(i*(i+3)/2 * SCREEN_PIXEL_SIZE.x, 0.0));
        razn = max(0,color.x+color.y+color.z-1.0)* BLUR_AMOUNT;
        col += texture(SCREEN_TEXTURE, UV + vec2(i*(i+3)/2 * SCREEN_PIXEL_SIZE.x, 0.0)).xyz /((i*i*(i+5)))*razn;

        color = texture(SCREEN_TEXTURE, UV+ vec2(i*(i+3)/2 * -SCREEN_PIXEL_SIZE.x, 0.0));
        razn = max(0,color.x+color.y+color.z-1.0)* BLUR_AMOUNT;
        col += texture(SCREEN_TEXTURE, UV + vec2(i*(i+3)/2 * -SCREEN_PIXEL_SIZE.x, 0.0)).xyz /((i*i*(i+5)))*razn;

        color = texture(SCREEN_TEXTURE, UV+ vec2(0.0, i*(i+3)/2*SCREEN_PIXEL_SIZE.y));
        razn = max(0,color.x+color.y+color.z-1.0)* BLUR_AMOUNT;
        col += texture(SCREEN_TEXTURE, UV + vec2(0.0, i*(i+3)/2*SCREEN_PIXEL_SIZE.y)).xyz /((i*i*(i+5)))*razn;

        color = texture(SCREEN_TEXTURE, UV+ vec2(0.0, i*(i+3)/2*-SCREEN_PIXEL_SIZE.y));
        razn = max(0,color.x+color.y+color.z-1.0)* BLUR_AMOUNT;
        col += texture(SCREEN_TEXTURE, UV + vec2(0.0, i*(i+3)/2*-SCREEN_PIXEL_SIZE.y)).xyz /((i*i*(i+5)))*razn;





        color = texture(SCREEN_TEXTURE, UV+ vec2(i*(i+3)/3 * SCREEN_PIXEL_SIZE.x, i*(i+3)/3*SCREEN_PIXEL_SIZE.y));
        razn = max(0,color.x+color.y+color.z-1.0)* BLUR_AMOUNT;
        col += texture(SCREEN_TEXTURE, UV + vec2(i*(i+3)/3 * SCREEN_PIXEL_SIZE.x, i*(i+3)/3*SCREEN_PIXEL_SIZE.y)).xyz /((i*i*(i+5)))*razn;

        color = texture(SCREEN_TEXTURE, UV+ vec2(i*(i+3)/3 * -SCREEN_PIXEL_SIZE.x, i*(i+3)/3*-SCREEN_PIXEL_SIZE.y));
        razn = max(0,color.x+color.y+color.z-1.0)* BLUR_AMOUNT;
        col += texture(SCREEN_TEXTURE, UV + vec2(i*(i+3)/3 * -SCREEN_PIXEL_SIZE.x, i*(i+3)/3*-SCREEN_PIXEL_SIZE.y)).xyz /((i*i*(i+5)))*razn;

        color = texture(SCREEN_TEXTURE, UV+ vec2(i*(i+3)/3 * -SCREEN_PIXEL_SIZE.x, i*(i+3)/3*SCREEN_PIXEL_SIZE.y));
        razn = max(0,color.x+color.y+color.z-1.0)* BLUR_AMOUNT;
        col += texture(SCREEN_TEXTURE, UV + vec2(i*(i+3)/3 * -SCREEN_PIXEL_SIZE.x, i*(i+3)/3*SCREEN_PIXEL_SIZE.y)).xyz /((i*i*(i+5)))*razn;

        color = texture(SCREEN_TEXTURE, UV+ vec2(i*(i+3)/3 * SCREEN_PIXEL_SIZE.x, i*(i+3)/3*-SCREEN_PIXEL_SIZE.y));
        razn = max(0,color.x+color.y+color.z-1.0)* BLUR_AMOUNT;
        col += texture(SCREEN_TEXTURE, UV + vec2(i*(i+3)/3 * SCREEN_PIXEL_SIZE.x, i*(i+3)/3*-SCREEN_PIXEL_SIZE.y)).xyz /((i*i*(i+5)))*razn;

    }
    //col = col*col*col;
    //col += texture(SCREEN_TEXTURE, UV + vec2(1 * SCREEN_PIXEL_SIZE.x, 0.0)).xyz * 0.12;
    //col += texture(SCREEN_TEXTURE, UV + vec2(10 * -SCREEN_PIXEL_SIZE.x, 0.0)).xyz * 0.12;
    //col += texture(SCREEN_TEXTURE, UV + vec2(15 * SCREEN_PIXEL_SIZE.x, 0.0)).xyz * 0.09;
    //col += texture(SCREEN_TEXTURE, UV + vec2(30 * -SCREEN_PIXEL_SIZE.x, 0.0)).xyz * 0.09;
    //col += texture(SCREEN_TEXTURE, UV + vec2(40 * SCREEN_PIXEL_SIZE.x, 0.0)).xyz * 0.05;
    //col += texture(SCREEN_TEXTURE, UV + vec2(40 * -SCREEN_PIXEL_SIZE.x, 0.0)).xyz * 0.05;
//
    //col += texture(SCREEN_TEXTURE, UV + vec2(0.0, SCREEN_PIXEL_SIZE.y)).xyz * 0.15;
    //col += texture(SCREEN_TEXTURE, UV + vec2(0.0, -SCREEN_PIXEL_SIZE.y)).xyz * 0.15;
    //col += texture(SCREEN_TEXTURE, UV + vec2(0.0, 2 * SCREEN_PIXEL_SIZE.y)).xyz * 0.12;
    //col += texture(SCREEN_TEXTURE, UV + vec2(0.0, 10 * -SCREEN_PIXEL_SIZE.y)).xyz * 0.12;
    //col += texture(SCREEN_TEXTURE, UV + vec2(0.0, 15 * SCREEN_PIXEL_SIZE.y)).xyz * 0.09;
    //col += texture(SCREEN_TEXTURE, UV + vec2(0.0, 30 * -SCREEN_PIXEL_SIZE.y)).xyz * 0.09;
    //col += texture(SCREEN_TEXTURE, UV + vec2(0.0, 40 * SCREEN_PIXEL_SIZE.y)).xyz * 0.05;
    //col += texture(SCREEN_TEXTURE, UV + vec2(0.0, 40 * -SCREEN_PIXEL_SIZE.y)).xyz * 0.05;
    //if(texture(SCREEN_TEXTURE, UV).x+texture(SCREEN_TEXTURE, UV).y+texture(SCREEN_TEXTURE, UV).z>=1.3){
    //    col = texture(SCREEN_TEXTURE, UV).xyz * BLUR_AMOUNT*2;
    //}else{
    //    col = vec3(0.0);
    //}
    //col = col*15*max(0,col.x+col.y+col.z-0.3);

    COLOR = +vec4(vec3(col),1/*col.x+col.y+col.z*/);//texture(SCREEN_TEXTURE, UV);//


    //COLOR = sum;
}
